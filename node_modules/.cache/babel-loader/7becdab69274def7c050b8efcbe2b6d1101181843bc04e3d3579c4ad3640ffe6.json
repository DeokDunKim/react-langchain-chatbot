{"ast":null,"code":"import LangchainProcessor from './LangchainProcessor';\nclass MessageParser {\n  constructor(actionProvider, state, createChatBotMessage) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n  async parse(incomingMessage) {\n    // Log the latest message\n    console.log(\"Latest Message:\", incomingMessage);\n\n    // Log all previous messages (not including the latest)\n    console.log(\"All Previous Messages:\", this.state.messages);\n\n    // Use the processor to get a reply\n  }\n}\n\nexport default MessageParser;","map":{"version":3,"names":["LangchainProcessor","MessageParser","constructor","actionProvider","state","createChatBotMessage","parse","incomingMessage","console","log","messages"],"sources":["/Users/idasilfverskiold/gptSandbox/reactlangchain/sandbox/src/components/MessageParser.js"],"sourcesContent":["import LangchainProcessor from './LangchainProcessor';\n\nclass MessageParser {\n    constructor(actionProvider, state, createChatBotMessage) {\n        this.actionProvider = actionProvider;\n        this.state = state;\n\n    }\n\n    async parse(incomingMessage) {\n        // Log the latest message\n        console.log(\"Latest Message:\", incomingMessage);\n\n        // Log all previous messages (not including the latest)\n        console.log(\"All Previous Messages:\", this.state.messages);\n\n        // Use the processor to get a reply\n\n\n    }\n}\n\nexport default MessageParser;\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,sBAAsB;AAErD,MAAMC,aAAa,CAAC;EAChBC,WAAWA,CAACC,cAAc,EAAEC,KAAK,EAAEC,oBAAoB,EAAE;IACrD,IAAI,CAACF,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,KAAK,GAAGA,KAAK;EAEtB;EAEA,MAAME,KAAKA,CAACC,eAAe,EAAE;IACzB;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,eAAe,CAAC;;IAE/C;IACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACL,KAAK,CAACM,QAAQ,CAAC;;IAE1D;EAGJ;AACJ;;AAEA,eAAeT,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}