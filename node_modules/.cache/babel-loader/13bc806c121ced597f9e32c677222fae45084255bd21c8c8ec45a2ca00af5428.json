{"ast":null,"code":"import LangchainProcessor from './LangchainProcessor';\nclass MessageParser {\n  constructor(actionProvider, state, createChatBotMessage) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n    this.createChatBotMessage = createChatBotMessage;\n  }\n  async parse(incomingMessage) {\n    // Use the processor to get a reply\n    const reply = await LangchainProcessor(incomingMessage, this.state.messages);\n\n    // Send the reply using the actionProvider\n    this.actionProvider.sendBotResponse(reply);\n  }\n}\nexport default MessageParser;","map":{"version":3,"names":["LangchainProcessor","MessageParser","constructor","actionProvider","state","createChatBotMessage","parse","incomingMessage","reply","messages","sendBotResponse"],"sources":["/Users/idasilfverskiold/gptSandbox/reactlangchain/sandbox/src/components/MessageParser.js"],"sourcesContent":["import LangchainProcessor from './LangchainProcessor';\n\nclass MessageParser {\n    constructor(actionProvider, state, createChatBotMessage) {\n        this.actionProvider = actionProvider;\n        this.state = state;\n        this.createChatBotMessage = createChatBotMessage;\n    }\n\n    async parse(incomingMessage) {\n        // Use the processor to get a reply\n        const reply = await LangchainProcessor(incomingMessage, this.state.messages);\n        \n        // Send the reply using the actionProvider\n        this.actionProvider.sendBotResponse(reply);\n    }\n}\n\nexport default MessageParser;\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,sBAAsB;AAErD,MAAMC,aAAa,CAAC;EAChBC,WAAWA,CAACC,cAAc,EAAEC,KAAK,EAAEC,oBAAoB,EAAE;IACrD,IAAI,CAACF,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;EACpD;EAEA,MAAMC,KAAKA,CAACC,eAAe,EAAE;IACzB;IACA,MAAMC,KAAK,GAAG,MAAMR,kBAAkB,CAACO,eAAe,EAAE,IAAI,CAACH,KAAK,CAACK,QAAQ,CAAC;;IAE5E;IACA,IAAI,CAACN,cAAc,CAACO,eAAe,CAACF,KAAK,CAAC;EAC9C;AACJ;AAEA,eAAeP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}