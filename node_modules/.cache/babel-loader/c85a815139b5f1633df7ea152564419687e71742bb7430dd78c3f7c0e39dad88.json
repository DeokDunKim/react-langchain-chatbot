{"ast":null,"code":"import { OpenAI } from \"langchain/llms/openai\";\nclass LangchainProcessor {\n  constructor(createChatBotMessage) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.llm = new OpenAI({\n      temperature: 0.9\n    });\n  }\n  async process(newMessage, allMessages) {\n    // You can use newMessage and allMessages here if needed\n\n    try {\n      const result = await this.llm.predict(newMessage);\n      return this.createChatBotMessage(result); // Assuming the result is a string\n    } catch (error) {\n      console.error(\"Error processing message with OpenAI:\", error);\n      return this.createChatBotMessage(\"Sorry, I faced an error processing your message.\");\n    }\n  }\n}\nexport default LangchainProcessor;","map":{"version":3,"names":["OpenAI","LangchainProcessor","constructor","createChatBotMessage","llm","temperature","process","newMessage","allMessages","result","predict","error","console"],"sources":["/Users/idasilfverskiold/gptSandbox/reactlangchain/sandbox/src/components/LangchainProcessor.js"],"sourcesContent":["import { OpenAI } from \"langchain/llms/openai\";\n\nclass LangchainProcessor {\n    constructor(createChatBotMessage) {\n        this.createChatBotMessage = createChatBotMessage;\n        this.llm = new OpenAI({\n            temperature: 0.9,\n        });\n    }\n\n    async process(newMessage, allMessages) {\n        // You can use newMessage and allMessages here if needed\n\n        try {\n            const result = await this.llm.predict(newMessage);\n            return this.createChatBotMessage(result); // Assuming the result is a string\n        } catch (error) {\n            console.error(\"Error processing message with OpenAI:\", error);\n            return this.createChatBotMessage(\"Sorry, I faced an error processing your message.\");\n        }\n    }\n}\n\nexport default LangchainProcessor;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,kBAAkB,CAAC;EACrBC,WAAWA,CAACC,oBAAoB,EAAE;IAC9B,IAAI,CAACA,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACC,GAAG,GAAG,IAAIJ,MAAM,CAAC;MAClBK,WAAW,EAAE;IACjB,CAAC,CAAC;EACN;EAEA,MAAMC,OAAOA,CAACC,UAAU,EAAEC,WAAW,EAAE;IACnC;;IAEA,IAAI;MACA,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACL,GAAG,CAACM,OAAO,CAACH,UAAU,CAAC;MACjD,OAAO,IAAI,CAACJ,oBAAoB,CAACM,MAAM,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,OAAO,IAAI,CAACR,oBAAoB,CAAC,kDAAkD,CAAC;IACxF;EACJ;AACJ;AAEA,eAAeF,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}